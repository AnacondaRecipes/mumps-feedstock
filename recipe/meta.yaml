{% set name = "mumps-mpi" %}
{% set version = "5.1.2" %}
{% set sha256 = "eb345cda145da9aea01b851d17e54e7eef08e16bfa148100ac1f7f046cd42ae9" %}
{% set blas = "openblas" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  fn: MUMPS_{{ version }}.tar.gz
  url: http://mumps.enseeiht.fr/MUMPS_{{ version }}.tar.gz
  sha256: {{ sha256 }}

build:
  number: 0
  skip: true  # [win]
  features:
    - blas_{{ blas }}

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('fortran') }}
    - blas 1.* {{ blas }}
    {% if blas == 'openblas' %}
    - openblas
    {% endif %}
    - metis
    - {{ mpi }}
    - scalapack
    - parmetis
    - ptscotch

  run:
    - blas 1.* {{ blas }}
    {% if blas == 'openblas' %}
    - openblas
    {% endif %}
    - metis
    - {{ mpi }}
    - scalapack
    - parmetis
    - ptscotch

test:
  requires:
    - {{ compiler('c') }}
    - {{ compiler('fortran') }}
  commands:
    - test -f "${PREFIX}/lib/libzmumps.a"
    - test -f "${PREFIX}/lib/libcmumps.a"
    - test -f "${PREFIX}/lib/libdmumps.a"
    - test -f "${PREFIX}/lib/libsmumps.a"
    - test -f "${PREFIX}/lib/libmumps_common.a"
    - test -f "${PREFIX}/lib/libpord.a"
    - test -f "${PREFIX}/include/dmumps_struc.h"
    - test -f "${PREFIX}/include/zmumps_struc.h"
    - test -f "${PREFIX}/include/cmumps_struc.h"
    - test -f "${PREFIX}/include/smumps_struc.h"

about:
  home: http://mumps.enseeiht.fr/
  license: CeCILL-C
  license_file: LICENSE
  summary: 'MUMPS: a parallel sparse direct solver'
  description: |
    MUMPS (“MUltifrontal Massively Parallel Solver”) is a package for solving 
    systems of linear equations of the form Ax = b, where A is a square sparse 
    matrix that can be either unsymmetric, symmetric positive definite, or 
    general symmetric, on distributed memory computers. MUMPS implements a 
    direct method based on a multifrontal approach which performs a Gaussian 
    factorization.
  doc_url: http://mumps.enseeiht.fr/index.php?page=doc

extra:
  recipe-maintainers:
    - basnijholt
    - dalcinl
    - minrk
